import React, { useState } from "react";
import {
  View,
  Text,
  TouchableOpacity,
  StyleSheet,
  ScrollView,
  Modal,
  Linking,
  Alert,
} from "react-native";
import { FontAwesome, Ionicons } from "@expo/vector-icons";
import { useNavigation, useRoute } from "@react-navigation/native";
import { LinearGradient } from "expo-linear-gradient";
import { useTheme } from "../context/ThemeContext";

const HelpScreen = () => {
  const navigation = useNavigation();
  const route = useRoute();
  const { currentTheme } = useTheme();
  const usuario = route.params?.usuario ?? {};
  
  const [categoriaSeleccionada, setCategoriaSeleccionada] = useState(null);
  const [preguntaSeleccionada, setPreguntaSeleccionada] = useState(null);
  const [modalVisible, setModalVisible] = useState(false);

  const categoriasAyuda = [
    {
      id: "general",
      titulo: "Informaci√≥n General",
      icono: "info-circle",
      color: "#3498db",
      preguntas: [
        {
          pregunta: "¬øQu√© es veciApp?",
          respuesta: "veciApp es una plataforma que conecta emprendedores locales con clientes de su comunidad. Permite a los usuarios descubrir productos y servicios cerca de su ubicaci√≥n, realizar pedidos y contactar directamente con los negocios a trav√©s de WhatsApp."
        },
        {
          pregunta: "¬øC√≥mo funciona la aplicaci√≥n?",
          respuesta: "La app funciona como un marketplace local donde:\n\n‚Ä¢ Los clientes pueden explorar productos y servicios por categor√≠as\n‚Ä¢ Realizar pedidos con carrito de compras\n‚Ä¢ Contactar directamente con emprendedores v√≠a WhatsApp\n‚Ä¢ Gestionar sus direcciones de entrega\n‚Ä¢ Ver el historial de sus pedidos\n\n‚Ä¢ Los emprendedores pueden crear su vitrina virtual\n‚Ä¢ Gestionar pedidos recibidos\n‚Ä¢ Actualizar estados de pedidos\n‚Ä¢ Acceder a estad√≠sticas de ventas"
        },
        {
          pregunta: "¬øEs gratis usar la aplicaci√≥n?",
          respuesta: "S√≠, veciApp es completamente gratuita para los clientes. Los emprendedores pueden usar el Plan B√°sico gratis o suscribirse al Plan Premium ($4.990/mes) para acceder a funcionalidades avanzadas como vitrina virtual, promoci√≥n destacada y estad√≠sticas avanzadas."
        }
      ]
    },
    {
      id: "pedidos",
      titulo: "Pedidos y Compras",
      icono: "shopping-cart",
      color: "#e74c3c",
      preguntas: [
        {
          pregunta: "¬øC√≥mo realizo un pedido?",
          respuesta: "Para realizar un pedido:\n\n1. Explora las categor√≠as (Comida, Servicios, Negocios, Belleza)\n2. Selecciona un emprendimiento\n3. Agrega productos al carrito usando los botones + y -\n4. Elige el modo de entrega (Delivery o Retiro en local)\n5. Selecciona una direcci√≥n de entrega\n6. Revisa tu pedido en el carrito\n7. Confirma y env√≠a el pedido por WhatsApp\n\nEl mensaje se enviar√° autom√°ticamente con todos los detalles del pedido."
        },
        {
          pregunta: "¬øC√≥mo funciona el carrito de compras?",
          respuesta: "El carrito te permite:\n\n‚Ä¢ Agregar m√∫ltiples productos de diferentes categor√≠as\n‚Ä¢ Ajustar cantidades con los botones + y -\n‚Ä¢ Eliminar productos completamente\n‚Ä¢ Ver el total de tu pedido\n‚Ä¢ Cambiar entre delivery y retiro en local\n\n‚ö†Ô∏è Importante: El carrito se limpia autom√°ticamente despu√©s de enviar el pedido para evitar duplicados."
        },
        {
          pregunta: "¬øPuedo modificar un pedido despu√©s de enviarlo?",
          respuesta: "Una vez enviado el pedido por WhatsApp, debes contactar directamente con el emprendedor para cualquier modificaci√≥n. La aplicaci√≥n no permite cambios autom√°ticos despu√©s del env√≠o para mantener la integridad del proceso de pedidos."
        },
        {
          pregunta: "¬øC√≥mo veo el estado de mis pedidos?",
          respuesta: "Puedes ver tus pedidos en 'Mis Pedidos' desde tu perfil:\n\n‚Ä¢ Pedidos Pendientes: Pedidos en proceso\n‚Ä¢ Historial: Pedidos completados o cancelados\n\nLos estados incluyen: Pendiente, Confirmado, En Preparaci√≥n, Listo, Entregado o Cancelado."
        }
      ]
    },
    {
      id: "direcciones",
      titulo: "Direcciones y Ubicaci√≥n",
      icono: "map-marker",
      color: "#27ae60",
      preguntas: [
        {
          pregunta: "¬øC√≥mo agrego una direcci√≥n de entrega?",
          respuesta: "Para agregar una direcci√≥n:\n\n1. Ve a 'Mi Perfil' ‚Üí 'Mis Direcciones'\n2. Toca 'Agregar Nueva Direcci√≥n'\n3. Usa el mapa para seleccionar la ubicaci√≥n exacta\n4. Escribe la direcci√≥n completa\n5. Agrega una referencia (opcional)\n6. Guarda la direcci√≥n\n\nLa aplicaci√≥n validar√° autom√°ticamente que la direcci√≥n existe usando Google Maps."
        },
        {
          pregunta: "¬øPor qu√© necesito agregar una direcci√≥n?",
          respuesta: "Las direcciones son obligatorias porque:\n\n‚Ä¢ Permiten calcular distancias para delivery\n‚Ä¢ Ayudan a los emprendedores a ubicar tu pedido\n‚Ä¢ Mejoran la precisi√≥n de las entregas\n‚Ä¢ Son necesarias para el sistema de mapas\n\nSin direcciones registradas, no podr√°s realizar pedidos con delivery."
        },
        {
          pregunta: "¬øC√≥mo funciona el mapa de direcciones?",
          respuesta: "El mapa te permite:\n\n‚Ä¢ Seleccionar tu ubicaci√≥n exacta tocando en el mapa\n‚Ä¢ Buscar direcciones escribiendo la direcci√≥n\n‚Ä¢ Validar que la direcci√≥n existe realmente\n‚Ä¢ Ver la ubicaci√≥n en tiempo real\n\nEl sistema usa Google Maps para garantizar la precisi√≥n de las ubicaciones."
        }
      ]
    },
    {
      id: "emprendedores",
      titulo: "Para Emprendedores",
      icono: "briefcase",
      color: "#f39c12",
      preguntas: [
        {
          pregunta: "¬øC√≥mo registro mi emprendimiento?",
          respuesta: "Para registrar tu emprendimiento:\n\n1. Ve a 'Mi Perfil' ‚Üí 'Mis Emprendimientos'\n2. Completa el formulario con:\n   ‚Ä¢ Informaci√≥n b√°sica del negocio\n   ‚Ä¢ Categor√≠as y subcategor√≠as\n   ‚Ä¢ Direcci√≥n con validaci√≥n en mapa\n   ‚Ä¢ Horarios de atenci√≥n\n   ‚Ä¢ M√©todos de pago y entrega\n   ‚Ä¢ Galer√≠a de productos\n3. Env√≠a para revisi√≥n\n\nUna vez aprobado, aparecer√° en las b√∫squedas de clientes."
        },
        {
          pregunta: "¬øC√≥mo gestiono los pedidos recibidos?",
          respuesta: "En 'Pedidos Recibidos' puedes:\n\n‚Ä¢ Ver todos los pedidos de clientes\n‚Ä¢ Actualizar estados: Pendiente ‚Üí Confirmado ‚Üí En Preparaci√≥n ‚Üí Listo ‚Üí Entregado\n‚Ä¢ Ver informaci√≥n detallada del cliente\n‚Ä¢ Contactar directamente por tel√©fono o WhatsApp\n‚Ä¢ Ver la ubicaci√≥n de entrega en el mapa\n‚Ä¢ Acceder al historial de pedidos"
        },
        {
          pregunta: "¬øQu√© es el Plan Premium?",
          respuesta: "El Plan Premium ($4.990/mes) incluye:\n\n‚úÖ Vitrina virtual completa\n‚úÖ Promoci√≥n destacada en b√∫squedas\n‚úÖ Estad√≠sticas avanzadas de ventas\n‚úÖ Soporte prioritario 24/7\n‚úÖ Direcciones ilimitadas\n‚úÖ Gesti√≥n de inventario\n‚úÖ Notificaciones push personalizadas\n‚úÖ An√°lisis de clientes\n‚úÖ Herramientas de marketing\n\nEl Plan B√°sico es gratuito e incluye publicaci√≥n b√°sica y gesti√≥n de pedidos."
        },
        {
          pregunta: "¬øC√≥mo veo las estad√≠sticas de mi negocio?",
          respuesta: "En 'Mis Estad√≠sticas' puedes ver:\n\n‚Ä¢ N√∫mero total de pedidos\n‚Ä¢ Ingresos generados\n‚Ä¢ Productos m√°s vendidos\n‚Ä¢ Clientes m√°s frecuentes\n‚Ä¢ Tendencias de ventas\n‚Ä¢ Horarios de mayor actividad\n\nLas estad√≠sticas se actualizan en tiempo real y est√°n disponibles para usuarios Premium."
        }
      ]
    },
    {
      id: "categorias",
      titulo: "Categor√≠as y Productos",
      icono: "tags",
      color: "#9b59b6",
      preguntas: [
        {
          pregunta: "¬øQu√© categor√≠as est√°n disponibles?",
          respuesta: "veciApp incluye estas categor√≠as principales:\n\nüçï COMIDA PREPARADA\n‚Ä¢ Sushi, Pizza, Hamburguesas\n‚Ä¢ Comida Casera, Peruana, China\n‚Ä¢ Pasteler√≠a, Vegetariano/Vegano\n‚Ä¢ Mariscos, Carnes\n\nüõ† SERVICIOS LOCALES\n‚Ä¢ Construcci√≥n, Pintura, Gasfiter√≠a\n‚Ä¢ Electricidad, Computadores\n‚Ä¢ Jardiner√≠a, Mudanzas, Limpieza\n‚Ä¢ Reparaciones, Dise√±o\n\nüè™ TIENDAS & NEGOCIOS\n‚Ä¢ Almac√©n, Panader√≠a, Verduler√≠a\n‚Ä¢ Carnicer√≠a, Pescader√≠a\n‚Ä¢ Minimarket, Licorer√≠a, Ferreter√≠a\n\nüíá BELLEZA & BIENESTAR\n‚Ä¢ Spa, Manicure, Peluquer√≠a\n‚Ä¢ Barber√≠a, Est√©tica, Maquillaje\n‚Ä¢ Depilaci√≥n, Tatuajes, Masajes"
        },
        {
          pregunta: "¬øC√≥mo busco productos espec√≠ficos?",
          respuesta: "Puedes buscar productos de varias formas:\n\n‚Ä¢ Usa la barra de b√∫squeda en la pantalla principal\n‚Ä¢ Explora por categor√≠as en las pantallas espec√≠ficas\n‚Ä¢ Filtra por ubicaci√≥n y distancia\n‚Ä¢ Busca por nombre del emprendimiento\n‚Ä¢ Explora las ofertas del d√≠a\n\nLa b√∫squeda incluye productos, servicios y nombres de negocios."
        },
        {
          pregunta: "¬øC√≥mo funcionan las ofertas?",
          respuesta: "Las ofertas funcionan as√≠:\n\n‚Ä¢ Los emprendedores pueden marcar productos como 'Oferta'\n‚Ä¢ Aparecen destacadas con etiquetas especiales\n‚Ä¢ Se muestran en la secci√≥n 'Ofertas del D√≠a'\n‚Ä¢ Incluyen descuentos, promociones 2x1, paquetes especiales\n‚Ä¢ Los precios de oferta se muestran destacados en verde\n\nLas ofertas se actualizan regularmente para mantener el contenido fresco."
        }
      ]
    },
    {
      id: "tecnico",
      titulo: "Soporte T√©cnico",
      icono: "cog",
      color: "#34495e",
      preguntas: [
        {
          pregunta: "¬øQu√© hacer si la app no funciona correctamente?",
          respuesta: "Si experimentas problemas:\n\n1. Verifica tu conexi√≥n a internet\n2. Cierra y vuelve a abrir la aplicaci√≥n\n3. Reinicia tu dispositivo\n4. Actualiza la aplicaci√≥n desde la tienda\n5. Limpia la cach√© de la aplicaci√≥n\n\nSi el problema persiste, contacta al soporte t√©cnico con detalles espec√≠ficos del error."
        },
        {
          pregunta: "¬øC√≥mo cambio mi foto de perfil?",
          respuesta: "Para cambiar tu foto de perfil:\n\n1. Ve a 'Mi Perfil'\n2. Toca tu foto de perfil\n3. Selecciona 'Tomar foto' o 'Elegir de galer√≠a'\n4. Ajusta la imagen si es necesario\n5. Confirma la selecci√≥n\n\nLa nueva foto se guardar√° autom√°ticamente y aparecer√° en tu perfil."
        },
        {
          pregunta: "¬øC√≥mo actualizo mi informaci√≥n personal?",
          respuesta: "Para actualizar tu informaci√≥n:\n\n1. Ve a 'Mi Perfil' ‚Üí 'Informaci√≥n Personal'\n2. Modifica los campos que necesites cambiar\n3. Para cambios importantes (tel√©fono), se enviar√° un c√≥digo de verificaci√≥n\n4. Ingresa el c√≥digo recibido por SMS\n5. Guarda los cambios\n\nLos cambios se aplicar√°n inmediatamente en tu perfil."
        },
        {
          pregunta: "¬øQu√© permisos necesita la aplicaci√≥n?",
          respuesta: "veciApp necesita estos permisos:\n\nüì∑ C√ÅMARA: Para tomar fotos de productos y perfil\nüì± GALER√çA: Para seleccionar im√°genes existentes\nüìç UBICACI√ìN: Para mostrar direcciones en mapas\nüìû TEL√âFONO: Para contactar emprendedores\nüí¨ WHATSAPP: Para enviar pedidos\n\nTodos los permisos se solicitan solo cuando son necesarios y puedes negarlos si lo deseas."
        }
      ]
    }
  ];

  const abrirPregunta = (categoria, pregunta) => {
    setCategoriaSeleccionada(categoria);
    setPreguntaSeleccionada(pregunta);
    setModalVisible(true);
  };

  const contactarSoporte = () => {
    Alert.alert(
      "Contactar Soporte",
      "¬øC√≥mo te gustar√≠a contactar con nuestro equipo de soporte?",
      [
        { text: "Cancelar", style: "cancel" },
        { 
          text: "WhatsApp", 
          onPress: () => {
            const mensaje = "Hola, necesito ayuda con veciApp. Mi consulta es:";
            const url = `whatsapp://send?phone=+56912345678&text=${encodeURIComponent(mensaje)}`;
            Linking.openURL(url).catch(() => {
              Alert.alert("Error", "No se pudo abrir WhatsApp");
            });
          }
        },
        { 
          text: "Email", 
          onPress: () => {
            const email = "soporte@veciapp.cl";
            const subject = "Consulta veciApp";
            const body = "Hola, necesito ayuda con veciApp. Mi consulta es:";
            const url = `mailto:${email}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
            Linking.openURL(url).catch(() => {
              Alert.alert("Error", "No se pudo abrir el cliente de email");
            });
          }
        }
      ]
    );
  };

  const renderCategoria = (categoria) => (
    <TouchableOpacity
      key={categoria.id}
      style={[styles.categoriaCard, { borderLeftColor: categoria.color, backgroundColor: currentTheme.cardBackground, shadowColor: currentTheme.shadow }]}
      onPress={() => setCategoriaSeleccionada(categoria)}
    >
      <View style={styles.categoriaHeader}>
        <View style={[styles.categoriaIcono, { backgroundColor: categoria.color }]}>
          <FontAwesome name={categoria.icono} size={20} color="white" />
        </View>
        <View style={styles.categoriaInfo}>
          <Text style={[styles.categoriaTitulo, { color: currentTheme.text }]}>{categoria.titulo}</Text>
          <Text style={[styles.categoriaDescripcion, { color: currentTheme.textSecondary }]}>
            {categoria.preguntas.length} preguntas frecuentes
          </Text>
        </View>
        <FontAwesome name="chevron-right" size={16} color={currentTheme.textSecondary} />
      </View>
    </TouchableOpacity>
  );

  const renderPreguntas = () => {
    if (!categoriaSeleccionada) return null;

    return (
      <View style={styles.preguntasContainer}>
        <View style={styles.preguntasHeader}>
          <TouchableOpacity
            style={styles.backButton}
            onPress={() => setCategoriaSeleccionada(null)}
          >
            <FontAwesome name="arrow-left" size={16} color={currentTheme.primary} />
            <Text style={[styles.backText, { color: currentTheme.primary }]}>Volver</Text>
          </TouchableOpacity>
          <Text style={[styles.preguntasTitulo, { color: currentTheme.text }]}>{categoriaSeleccionada.titulo}</Text>
        </View>

        <ScrollView style={styles.preguntasList}>
          {categoriaSeleccionada.preguntas.map((pregunta, index) => (
            <TouchableOpacity
              key={index}
              style={[styles.preguntaCard, { backgroundColor: currentTheme.cardBackground, shadowColor: currentTheme.shadow }]}
              onPress={() => abrirPregunta(categoriaSeleccionada, pregunta)}
            >
              <Text style={[styles.preguntaTexto, { color: currentTheme.text }]}>{pregunta.pregunta}</Text>
              <FontAwesome name="chevron-right" size={14} color={currentTheme.textSecondary} />
            </TouchableOpacity>
          ))}
        </ScrollView>
      </View>
    );
  };

  const renderModalRespuesta = () => (
    <Modal
      animationType="slide"
      transparent={true}
      visible={modalVisible}
      onRequestClose={() => setModalVisible(false)}
    >
      <View style={styles.modalContainer}>
        <View style={[styles.modalContent, { backgroundColor: currentTheme.cardBackground }]}>
          <View style={styles.modalHeader}>
            <Text style={[styles.modalTitulo, { color: currentTheme.text }]}>{preguntaSeleccionada?.pregunta}</Text>
            <TouchableOpacity
              style={styles.modalCloseButton}
              onPress={() => setModalVisible(false)}
            >
              <FontAwesome name="times" size={20} color={currentTheme.primary} />
            </TouchableOpacity>
          </View>

          <ScrollView style={styles.modalBody}>
            <Text style={[styles.respuestaTexto, { color: currentTheme.text }]}>
              {preguntaSeleccionada?.respuesta}
            </Text>
          </ScrollView>

          <View style={[styles.modalFooter, { borderTopColor: currentTheme.border }]}>
            <TouchableOpacity
              style={[styles.contactarButton, { backgroundColor: currentTheme.primary }]}
              onPress={() => {
                setModalVisible(false);
                contactarSoporte();
              }}
            >
              <FontAwesome name="question-circle" size={16} color="white" />
              <Text style={styles.contactarTexto}>¬øNecesitas m√°s ayuda?</Text>
            </TouchableOpacity>
          </View>
        </View>
      </View>
    </Modal>
  );

  return (
    <View style={[styles.containerMaster, { backgroundColor: currentTheme.background }]}>
      <LinearGradient
        colors={[currentTheme.primary, currentTheme.secondary]}
        style={styles.headerGradient}
      >
        <View style={styles.headerContainer}>
          <TouchableOpacity
            style={styles.backButton}
            onPress={() => navigation.goBack()}
          >
            <Ionicons name="arrow-back" size={24} color="white" />
          </TouchableOpacity>
          <View style={styles.headerTitleContainer}>
            <FontAwesome name="question-circle" size={24} color="white" />
            <Text style={styles.tituloPrincipal}>Necesito Ayuda</Text>
          </View>
        </View>
      </LinearGradient>

      <ScrollView style={styles.container} contentContainerStyle={styles.scrollContainer}>
        {!categoriaSeleccionada ? (
          <>
            <View style={[styles.bienvenidaContainer, { backgroundColor: currentTheme.cardBackground, shadowColor: currentTheme.shadow }]}>
              <Text style={[styles.bienvenidaTitulo, { color: currentTheme.text }]}>¬°Hola! ¬øEn qu√© podemos ayudarte?</Text>
              <Text style={[styles.bienvenidaDescripcion, { color: currentTheme.textSecondary }]}>
                Encuentra respuestas r√°pidas a las preguntas m√°s comunes sobre veciApp
              </Text>
            </View>

            <View style={styles.categoriasContainer}>
              {categoriasAyuda.map(renderCategoria)}
            </View>

            <View style={[styles.soporteContainer, { backgroundColor: currentTheme.cardBackground, shadowColor: currentTheme.shadow }]}>
              <Text style={[styles.soporteTitulo, { color: currentTheme.text }]}>¬øNo encuentras lo que buscas?</Text>
              <Text style={[styles.soporteDescripcion, { color: currentTheme.textSecondary }]}>
                Nuestro equipo de soporte est√° aqu√≠ para ayudarte
              </Text>
              <TouchableOpacity
                style={[styles.soporteButton, { backgroundColor: currentTheme.primary }]}
                onPress={contactarSoporte}
              >
                <FontAwesome name="headphones" size={20} color="white" />
                <Text style={styles.soporteButtonTexto}>Contactar Soporte</Text>
              </TouchableOpacity>
            </View>
          </>
        ) : (
          renderPreguntas()
        )}
      </ScrollView>

      {renderModalRespuesta()}
    </View>
  );
};

const styles = StyleSheet.create({
  containerMaster: {
    flex: 1,
  },
  headerGradient: {
    paddingTop: 50,
    paddingBottom: 20,
    paddingHorizontal: 20,
    borderBottomLeftRadius: 30,
    borderBottomRightRadius: 30,
  },
  headerContainer: {
    flexDirection: "row",
    alignItems: "center",
  },
  backButton: {
    marginRight: 15,
    flexDirection: "row",
    alignItems: "center",
  },
  backText: {
    marginLeft: 5,
    fontSize: 16,
    color: "#2A9D8F",
    fontWeight: "500",
  },
  headerTitleContainer: {
    flexDirection: "row",
    alignItems: "center",
    flex: 1,
  },
  tituloPrincipal: {
    fontSize: 24,
    fontWeight: "bold",
    color: "white",
    marginLeft: 10,
  },
  container: {
    flex: 1,
  },
  scrollContainer: {
    padding: 20,
  },
  bienvenidaContainer: {
    backgroundColor: "white",
    borderRadius: 15,
    padding: 20,
    marginBottom: 20,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  bienvenidaTitulo: {
    fontSize: 20,
    fontWeight: "bold",
    color: "#2c3e50",
    marginBottom: 10,
  },
  bienvenidaDescripcion: {
    fontSize: 16,
    color: "#7f8c8d",
    lineHeight: 22,
  },
  categoriasContainer: {
    marginBottom: 20,
  },
  categoriaCard: {
    borderRadius: 12,
    marginBottom: 12,
    borderLeftWidth: 4,
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  categoriaHeader: {
    flexDirection: "row",
    alignItems: "center",
    padding: 16,
  },
  categoriaIcono: {
    width: 40,
    height: 40,
    borderRadius: 20,
    justifyContent: "center",
    alignItems: "center",
    marginRight: 15,
  },
  categoriaInfo: {
    flex: 1,
  },
  categoriaTitulo: {
    fontSize: 16,
    fontWeight: "bold",
    marginBottom: 4,
  },
  categoriaDescripcion: {
    fontSize: 14,
  },
  preguntasContainer: {
    flex: 1,
  },
  preguntasHeader: {
    flexDirection: "row",
    alignItems: "center",
    marginBottom: 20,
  },
  preguntasTitulo: {
    fontSize: 20,
    fontWeight: "bold",
    marginLeft: 15,
  },
  preguntasList: {
    flex: 1,
  },
  preguntaCard: {
    backgroundColor: "white",
    borderRadius: 12,
    padding: 16,
    marginBottom: 12,
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "space-between",
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.05,
    shadowRadius: 2,
    elevation: 1,
  },
  preguntaTexto: {
    fontSize: 16,
    color: "#2c3e50",
    flex: 1,
    marginRight: 10,
  },
  soporteContainer: {
    borderRadius: 15,
    padding: 20,
    alignItems: "center",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  soporteTitulo: {
    fontSize: 18,
    fontWeight: "bold",
    marginBottom: 8,
  },
  soporteDescripcion: {
    fontSize: 14,
    textAlign: "center",
    marginBottom: 20,
  },
  soporteButton: {
    paddingHorizontal: 24,
    paddingVertical: 12,
    borderRadius: 25,
    flexDirection: "row",
    alignItems: "center",
  },
  soporteButtonTexto: {
    color: "white",
    fontSize: 16,
    fontWeight: "600",
    marginLeft: 8,
  },
  // Estilos del modal
  modalContainer: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "rgba(0,0,0,0.5)",
  },
  modalContent: {
    backgroundColor: "white",
    borderRadius: 20,
    padding: 20,
    width: "90%",
    maxWidth: 400,
    maxHeight: "80%",
  },
  modalHeader: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    marginBottom: 20,
  },
  modalTitulo: {
    fontSize: 18,
    fontWeight: "bold",
    color: "#2c3e50",
    flex: 1,
    marginRight: 10,
  },
  modalCloseButton: {
    padding: 4,
  },
  modalBody: {
    maxHeight: 300,
    marginBottom: 20,
  },
  respuestaTexto: {
    fontSize: 16,
    color: "#34495e",
    lineHeight: 24,
  },
  modalFooter: {
    borderTopWidth: 1,
    borderTopColor: "#ecf0f1",
    paddingTop: 15,
  },
  contactarButton: {
    backgroundColor: "#2A9D8F",
    paddingVertical: 12,
    paddingHorizontal: 16,
    borderRadius: 10,
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "center",
  },
  contactarTexto: {
    color: "white",
    fontSize: 16,
    fontWeight: "600",
    marginLeft: 8,
  },
});

export default HelpScreen;
